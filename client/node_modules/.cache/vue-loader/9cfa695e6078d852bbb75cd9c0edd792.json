{"remainingRequest":"/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zacharycrowell/Desktop/vue-network-scanner/src/components/NetworkInformation.vue?vue&type=style&index=0&id=20e5fd4e&scoped=true&lang=css&","dependencies":[{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/src/components/NetworkInformation.vue","mtime":1571766052429},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnRhYmxlIHsKICB3aWR0aDogMTAwJTsKfQp0ciA+IHRoIHsKICB3aWR0aDogMjUlOwp9Ci5sb2FkZXItcG9zaXRpb24gewogIG1hcmdpbjogMCBhdXRvOwp9Cg=="},{"version":3,"sources":["NetworkInformation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NetworkInformation.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <Loader v-if=\"!loaded\" class=\"loader-position\" />\n    <table>\n      <thead v-if=\"networks.length !== 0\">\n        <tr>\n          <th>SSID</th>\n          <th>BSSID</th>\n          <th>Channel</th>\n          <th>Security</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"network in networks\" :key=\"network.id\">\n          <td><DataColumn id=\"col-1\" :list=\"network.ssid\" /></td>\n          <td><DataColumn id=\"col-1\" :list=\"network.bssid\" /></td>\n          <td><DataColumn id=\"col-1\" :list=\"network.channel.toString()\" /></td>\n          <td><DataColumn id=\"col-1\" :list=\"network.security[0]\" /></td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\n// import wifi from \"node-wifi\";\n// import si from \"systeminformation\";\nimport DataColumn from \"./DataColumn.vue\";\nimport Loader from \"./Loader.vue\";\nexport default {\n  components: {\n    DataColumn,\n    Loader\n  },\n  data() {\n    return {\n      networks: [],\n      loaded: false\n    };\n  },\n  methods: {\n    async closestNetworks() {\n      try {\n        const response = await fetch(\"http://localhost:3000/networkscanone\");\n        const data = await response.json();\n        this.networks = data;\n        this.loaded = true;\n        console.log(this.networks);\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    testMethod() {\n      // child_process.execFile('/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport')\n    }\n  },\n  mounted() {\n    this.closestNetworks();\n    this.testMethod();\n  }\n};\n</script>\n\n<style scoped>\ntable {\n  width: 100%;\n}\ntr > th {\n  width: 25%;\n}\n.loader-position {\n  margin: 0 auto;\n}\n</style>\n"]}]}