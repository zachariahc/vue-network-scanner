{"remainingRequest":"/Users/zacharycrowell/Desktop/vue-network-scanner/client/node_modules/babel-loader/lib/index.js!/Users/zacharycrowell/Desktop/vue-network-scanner/client/utils/index.js","dependencies":[{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/client/utils/index.js","mtime":1571767685841},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/client/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHdpZmkgPSByZXF1aXJlKCdub2RlLXdpZmknKTsKCnZhciBkb2cgPSBmdW5jdGlvbiBkb2coKSB7CiAgd2lmaS5pbml0KHsKICAgIGlmYWNlOiBudWxsIC8vIG5ldHdvcmsgaW50ZXJmYWNlLCBjaG9vc2UgYSByYW5kb20gd2lmaSBpbnRlcmZhY2UgaWYgc2V0IHRvIG51bGwKCiAgfSk7IC8vIFNjYW4gbmV0d29ya3MKCiAgdmFyIG5ldHdvcmtEYXRhID0gd2lmaS5zY2FuKCkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgcmV0dXJuIGRhdGE7CiAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZXJyKTsKICB9KTsKICBjb25zb2xlLmxvZyhuZXR3b3JrRGF0YSk7Cn07CgpleHBvcnQgZGVmYXVsdCBkb2c7IC8vIG1vZHVsZS5leHBvcnRzID0gZG9n"},{"version":3,"sources":["/Users/zacharycrowell/Desktop/vue-network-scanner/client/utils/index.js"],"names":["wifi","require","dog","init","iface","networkData","scan","then","data","catch","err","console","error","log"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AACNF,EAAAA,IAAI,CAACG,IAAL,CAAU;AACVC,IAAAA,KAAK,EAAE,IADG,CACE;;AADF,GAAV,EADM,CAKR;;AACD,MAAMC,WAAW,GAAIL,IAAI,CAACM,IAAL,GACpBC,IADoB,CACf,UAAAC,IAAI,EAAI;AACV,WAAOA,IAAP;AACH,GAHoB,EAIpBC,KAJoB,CAId,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,GAJW,CAArB;AAMAC,EAAAA,OAAO,CAACE,GAAR,CAAYR,WAAZ;AACR,CAbD;;AAeA,eAAeH,GAAf,C,CAEA","sourcesContent":["let wifi = require('node-wifi');\n\nconst dog = () => {\n            wifi.init({\n            iface: null // network interface, choose a random wifi interface if set to null\n          });\n           \n          // Scan networks\n         const networkData =  wifi.scan()\n         .then(data => {\n             return data\n         })\n         .catch(err => console.error(err))\n\n         console.log(networkData)\n}\n\nexport default dog\n\n// module.exports = dog"]}]}