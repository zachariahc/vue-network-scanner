{"remainingRequest":"/Users/zacharycrowell/Desktop/vue-network-scanner/client/node_modules/babel-loader/lib/index.js!/Users/zacharycrowell/Desktop/vue-network-scanner/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zacharycrowell/Desktop/vue-network-scanner/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zacharycrowell/Desktop/vue-network-scanner/client/src/components/NetworkInformation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/client/src/components/NetworkInformation.vue","mtime":1571848691981},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy96YWNoYXJ5Y3Jvd2VsbC9EZXNrdG9wL3Z1ZS1uZXR3b3JrLXNjYW5uZXIvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLyBpbXBvcnQgd2lmaSBmcm9tICJub2RlLXdpZmkiOwovLyBpbXBvcnQgc2kgZnJvbSAic3lzdGVtaW5mb3JtYXRpb24iOwppbXBvcnQgTW9kYWwgZnJvbSAiLi9Nb2RhbC52dWUiOwppbXBvcnQgRGF0YUNvbHVtbiBmcm9tICIuL0RhdGFDb2x1bW4udnVlIjsKaW1wb3J0IExvYWRlciBmcm9tICIuL0xvYWRlci52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgRGF0YUNvbHVtbjogRGF0YUNvbHVtbiwKICAgIExvYWRlcjogTG9hZGVyLAogICAgTW9kYWw6IE1vZGFsCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmV0d29ya3M6IFtdLAogICAgICBsb2FkZWQ6IGZhbHNlLAogICAgICBzZWxlY3RlZE5ldHdvcms6IHt9LAogICAgICBvcGVuTW9kYWw6IGZhbHNlLAogICAgICBzaG93QnV0dG9uOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBzaG93QnV0dG9uOiBmdW5jdGlvbiBzaG93QnV0dG9uKCkgewogICAgICAvLyBjb25zdCBjaGVjayA9IHNldFRpbWVvdXQoKCkgPT4gewogICAgICAvLyAgIHJldHVybiAnSGVsbG8nCiAgICAgIC8vIH0sIDMwMDApCiAgICAgIC8vIGNvbnNvbGUubG9nKGNoZWNrKQogICAgICB2YXIgbmV0d29ya0NoZWNrID0gdGhpcy5uZXR3b3Jrcy5sZW5ndGggPiAwID8gdHJ1ZSA6IGZhbHNlOwogICAgICByZXR1cm4gbmV0d29ya0NoZWNrOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY2xvc2VNb2RhbDogZnVuY3Rpb24gY2xvc2VNb2RhbCh2YWx1ZSkgewogICAgICB0aGlzLm9wZW5Nb2RhbCA9IGZhbHNlOwogICAgfSwKICAgIGNsb3Nlc3ROZXR3b3JrczogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2Nsb3Nlc3ROZXR3b3JrcyA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9uZXR3b3Jrc2Nhbm9uZSIpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgdGhpcy5uZXR3b3JrcyA9IGRhdGE7CiAgICAgICAgICAgICAgICB0aGlzLmxvYWRlZCA9IHRydWU7CiAgICAgICAgICAgICAgICB0aGlzLm5ldHdvcmtzLmxlbmd0aCA+IDAgPyB0aGlzLnNob3dCdXR0b24gPSBmYWxzZSA6IHRoaXMuc2hvd0J1dHRvbiA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbMCwgMTJdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGNsb3Nlc3ROZXR3b3JrcygpIHsKICAgICAgICByZXR1cm4gX2Nsb3Nlc3ROZXR3b3Jrcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gY2xvc2VzdE5ldHdvcmtzOwogICAgfSgpLAogICAgZ2V0TmV0d29ya1ZhbHVlczogZnVuY3Rpb24gZ2V0TmV0d29ya1ZhbHVlcyhuZXR3b3JrKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWROZXR3b3JrID0gbmV0d29yazsKICAgICAgdGhpcy5vcGVuTW9kYWwgPSB0cnVlOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuY2xvc2VzdE5ldHdvcmtzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["NetworkInformation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA,OAAA,KAAA;AACA,OAAA,UAAA;AACA,OAAA,MAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,MAAA,EAAA,MAFA;AAGA,IAAA,KAAA,EAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,KAFA;AAGA,MAAA,eAAA,EAAA,EAHA;AAIA,MAAA,SAAA,EAAA,KAJA;AAKA,MAAA,UAAA,EAAA;AALA,KAAA;AAOA,GAdA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,UAAA,EAAA,sBAAA;AAEA;AACA;AACA;AACA;AACA,UAAA,YAAA,GAAA,KAAA,QAAA,CAAA,MAAA,GAAA,CAAA,GAAA,IAAA,GAAA,KAAA;AACA,aAAA,YAAA;AACA;AATA,GAfA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,KADA,EACA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,KAHA;AAIA,IAAA,eAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAOA,KAAA,CAAA,sCAAA,CAPA;;AAAA;AAOA,gBAAA,QAPA;AAAA;AAAA,uBAQA,QAAA,CAAA,IAAA,EARA;;AAAA;AAQA,gBAAA,IARA;AASA,qBAAA,QAAA,GAAA,IAAA;AACA,qBAAA,MAAA,GAAA,IAAA;AACA,qBAAA,QAAA,CAAA,MAAA,GAAA,CAAA,GAAA,KAAA,UAAA,GAAA,KAAA,GAAA,KAAA,UAAA,GAAA,IAAA;AAXA;AAAA;;AAAA;AAAA;AAAA;AAaA,gBAAA,OAAA,CAAA,KAAA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgBA,IAAA,gBAhBA,4BAgBA,OAhBA,EAgBA;AACA,WAAA,eAAA,GAAA,OAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA;AAnBA,GA1BA;AA+CA,EAAA,OA/CA,qBA+CA;AACA,SAAA,eAAA;AACA;AAjDA,CAAA","sourcesContent":["<template>\n  <div>\n    <button class=\"refresh-button\" v-if=\"showButton\" @click=\"closestNetworks\">Try Again</button>\n    <Loader v-if=\"!loaded || networks.length === 0\" class=\"loader-position\" />\n    <table v-if=\"loaded && networks.length > 0\" >\n      <thead v-if=\"networks.length !== 0\">\n        <tr>\n          <th>SSID</th>\n          <th>BSSID</th>\n          <th>Channel</th>\n          <th>Security</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr \n        class=\"network-row\"\n        v-for=\"network in networks\" \n        :key=\"network.id\" \n        @click=\"getNetworkValues(network)\">\n          <td><DataColumn :list=\"network.ssid\" /></td>\n          <td><DataColumn :list=\"network.bssid\" /></td>\n          <td><DataColumn :list=\"network.channel.toString()\" /></td>\n          <td><DataColumn :list=\"network.security[0]\" /></td>\n        </tr>\n      </tbody>\n    </table>\n\n    <Modal \n    :isOpen=\"openModal\" \n    :selectedNetwork=\"selectedNetwork\"\n    @closedFromModal=\"closeModal\"\n     />\n\n  </div>\n</template>\n\n<script>\n// import wifi from \"node-wifi\";\n// import si from \"systeminformation\";\nimport Modal from \"./Modal.vue\";\nimport DataColumn from \"./DataColumn.vue\";\nimport Loader from \"./Loader.vue\";\nexport default {\n  components: {\n    DataColumn,\n    Loader,\n    Modal\n  },\n  data() {\n    return {\n      networks: [],\n      loaded: false,\n      selectedNetwork: {},\n      openModal: false,\n      showButton: false\n    };\n  },\n  computed: {\n    showButton: function(){\n\n      // const check = setTimeout(() => {\n      //   return 'Hello'\n      // }, 3000)\n      // console.log(check)\n      const networkCheck = this.networks.length > 0 ? true : false\n      return networkCheck\n    }\n  },\n  methods: {\n        closeModal(value) {\n          this.openModal = false\n    },\n    async closestNetworks() {\n    \n      try {\n        const response = await fetch(\"http://localhost:3000/networkscanone\");\n        const data = await response.json();\n        this.networks = data;\n        this.loaded = true;\n        this.networks.length > 0 ? this.showButton = false : this.showButton= true\n      } catch (err) {\n        console.error(err);\n      }\n    },\ngetNetworkValues(network){\n  this.selectedNetwork = network\n  this.openModal = true\n}\n  },\n  mounted() {\n    this.closestNetworks();\n  }\n};\n</script>\n\n<style scoped>\ntable {\n  border: 1px solid rgb(85, 85, 85);\n  background-color: rgba(65, 64, 64, .5);\n  border-radius: 10px;\n  width: 100%;\n  color: white;\n}\ntr > th {\n  color: white;\n  width: 25%;\n}\n.loader-position {\n  margin: 0 auto;\n}\n.network-row:hover {\n  background-color: rgba(47, 75, 109, 0.5);\n  cursor: pointer;\n}\n.refresh-button {\n  cursor: pointer;\n  padding: 7px;\n  margin: 10px;\n  margin-top: 10px;\n  background-color: rgb(206, 82, 0);\n  color: white;\n  font-size: 1.1rem;\n}\n.refresh-button:hover {\n  opacity: .75;\n}\n</style>\n"],"sourceRoot":"src/components"}]}