{"remainingRequest":"/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/babel-loader/lib/index.js!/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zacharycrowell/Desktop/vue-network-scanner/src/components/NetworkInformation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/src/components/NetworkInformation.vue","mtime":1571766052429},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zacharycrowell/Desktop/vue-network-scanner/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy96YWNoYXJ5Y3Jvd2VsbC9EZXNrdG9wL3Z1ZS1uZXR3b3JrLXNjYW5uZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vIGltcG9ydCB3aWZpIGZyb20gIm5vZGUtd2lmaSI7Ci8vIGltcG9ydCBzaSBmcm9tICJzeXN0ZW1pbmZvcm1hdGlvbiI7CmltcG9ydCBEYXRhQ29sdW1uIGZyb20gIi4vRGF0YUNvbHVtbi52dWUiOwppbXBvcnQgTG9hZGVyIGZyb20gIi4vTG9hZGVyLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBEYXRhQ29sdW1uOiBEYXRhQ29sdW1uLAogICAgTG9hZGVyOiBMb2FkZXIKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuZXR3b3JrczogW10sCiAgICAgIGxvYWRlZDogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBjbG9zZXN0TmV0d29ya3M6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9jbG9zZXN0TmV0d29ya3MgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZSwgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjMwMDAvbmV0d29ya3NjYW5vbmUiKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHRoaXMubmV0d29ya3MgPSBkYXRhOwogICAgICAgICAgICAgICAgdGhpcy5sb2FkZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5uZXR3b3Jrcyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbMCwgMTJdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGNsb3Nlc3ROZXR3b3JrcygpIHsKICAgICAgICByZXR1cm4gX2Nsb3Nlc3ROZXR3b3Jrcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gY2xvc2VzdE5ldHdvcmtzOwogICAgfSgpLAogICAgdGVzdE1ldGhvZDogZnVuY3Rpb24gdGVzdE1ldGhvZCgpIHsvLyBjaGlsZF9wcm9jZXNzLmV4ZWNGaWxlKCcvU3lzdGVtL0xpYnJhcnkvUHJpdmF0ZUZyYW1ld29ya3MvQXBwbGU4MDIxMS5mcmFtZXdvcmsvVmVyc2lvbnMvQ3VycmVudC9SZXNvdXJjZXMvYWlycG9ydCcpCiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5jbG9zZXN0TmV0d29ya3MoKTsKICAgIHRoaXMudGVzdE1ldGhvZCgpOwogIH0KfTs="},{"version":3,"sources":["NetworkInformation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA,OAAA,UAAA;AACA,OAAA,MAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,MAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,eADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGA,KAAA,CAAA,sCAAA,CAHA;;AAAA;AAGA,gBAAA,QAHA;AAAA;AAAA,uBAIA,QAAA,CAAA,IAAA,EAJA;;AAAA;AAIA,gBAAA,IAJA;AAKA,qBAAA,QAAA,GAAA,IAAA;AACA,qBAAA,MAAA,GAAA,IAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,KAAA,QAAA;AAPA;AAAA;;AAAA;AAAA;AAAA;AASA,gBAAA,OAAA,CAAA,KAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAYA,IAAA,UAZA,wBAYA,CACA;AACA;AAdA,GAXA;AA2BA,EAAA,OA3BA,qBA2BA;AACA,SAAA,eAAA;AACA,SAAA,UAAA;AACA;AA9BA,CAAA","sourcesContent":["<template>\n  <div>\n    <Loader v-if=\"!loaded\" class=\"loader-position\" />\n    <table>\n      <thead v-if=\"networks.length !== 0\">\n        <tr>\n          <th>SSID</th>\n          <th>BSSID</th>\n          <th>Channel</th>\n          <th>Security</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"network in networks\" :key=\"network.id\">\n          <td><DataColumn id=\"col-1\" :list=\"network.ssid\" /></td>\n          <td><DataColumn id=\"col-1\" :list=\"network.bssid\" /></td>\n          <td><DataColumn id=\"col-1\" :list=\"network.channel.toString()\" /></td>\n          <td><DataColumn id=\"col-1\" :list=\"network.security[0]\" /></td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\n// import wifi from \"node-wifi\";\n// import si from \"systeminformation\";\nimport DataColumn from \"./DataColumn.vue\";\nimport Loader from \"./Loader.vue\";\nexport default {\n  components: {\n    DataColumn,\n    Loader\n  },\n  data() {\n    return {\n      networks: [],\n      loaded: false\n    };\n  },\n  methods: {\n    async closestNetworks() {\n      try {\n        const response = await fetch(\"http://localhost:3000/networkscanone\");\n        const data = await response.json();\n        this.networks = data;\n        this.loaded = true;\n        console.log(this.networks);\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    testMethod() {\n      // child_process.execFile('/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport')\n    }\n  },\n  mounted() {\n    this.closestNetworks();\n    this.testMethod();\n  }\n};\n</script>\n\n<style scoped>\ntable {\n  width: 100%;\n}\ntr > th {\n  width: 25%;\n}\n.loader-position {\n  margin: 0 auto;\n}\n</style>\n"],"sourceRoot":"src/components"}]}